package dev.client.tenacity.module.impl.exploit;

import dev.client.tenacity.module.Category;
import dev.client.tenacity.module.Module;
import dev.client.tenacity.module.impl.combat.KillAura;
import dev.event.EventListener;
import dev.event.impl.network.PacketSendEvent;
import dev.event.impl.player.MotionEvent;
import dev.settings.impl.ModeSetting;
import dev.utils.network.PacketUtils;
import dev.utils.time.TimerUtil;

import com.craftrise.lE;
import com.craftrise.lv;
import cr.launcher.main.a;

import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;

public final class AntiAura extends Module {

    private final ModeSetting mode = new ModeSetting("Mode", "Legit", "Legit", "Rage");

    private final List<lv<?>> packetsList = new CopyOnWriteArrayList<>();

    private final TimerUtil timer = new TimerUtil();
    private double x,y,z;
    private final EventListener<MotionEvent> motionEventEventListener = e -> {
        switch (mode.getMode()){
            case "Legit":
                if(timer.hasTimeElapsed(50)){
                    if(!packetsList.isEmpty()) {
                        for (lv<?> packet : packetsList) {
                            PacketUtils.sendPacketNoEvent(packet);
                            packetsList.remove(packet);
                        }
                    }
                    timer.reset();
                }
                break;
            case "Rage":
                x = a.q.bE;
                y = a.q.aY;
                z = a.q.bH;
                double yaw = Math.toRadians(a.q.bL);
                double xValue = -Math.sin(yaw) * 2;
                double zValue = Math.cos(yaw) * 2;
               // if(KillAura.attacking){
                //    mc.thePlayer.setPosition(x + xValue,y,z + zValue);
               //     if(mc.thePlayer.ticksExisted % 2 == 0) {
                 //       mc.thePlayer.setPosition(x - xValue, y, z - zValue);
                 //   }
                //}
                break;
        }
    };

    private final EventListener<PacketSendEvent> packetSendEventEventListener = e -> {
        if(e.getPacket() instanceof lE){
            packetsList.add(e.getPacket());
            e.cancel();
        }
    };

    public AntiAura() {
        super("AntiAura", Category.EXPLOIT, "can sometimes cause your enemies aura to stop working properly");
        this.addSettings(mode);
    }
}
